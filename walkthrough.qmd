---
title: "Analysis Walkthrough Example"
author: "Rachel Garton"
format:
  html:
    self-contained: true
    code-fold: true
    code-tools: true

---

---
title: "R Assignment #3"
author: "Rachel Garton"
date: "`r format(Sys.time(), '%B %d, %Y')`"
format:
  html:
    self-contained: true
---
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)

# Load the packages we'll need
library(tidyverse)
library(lubridate)
library(readxl)
library(writexl)
library(janitor)

```

## House Democrats - First Trump Impeachment

### Load the data

Run the code below to load the data.

It will create a dataframe called `impeach`, which contains a row for every House Democrat and whether or not the member publicly called for impeachment in the case of the *first* Trump impeachment.

Additionally, a series of election results and demographics are included related to each member's district.

```{r}

impeach <- readRDS("impeach.rds")


```

### Questions

Write your code using grouping in the chunks below to help answer the following questions.

1)  How many members in the dataset favor impeachment vs. not (using the `for_impeachment` column)?

```{r}
# METHOD 1:

impeach%>% 
  filter(for_impeachment == "YES") %>% 
  summarise(count = n())

impeach %>% 
  filter(for_impeachment == "NO") %>% 
  summarise(count = n())

# OR METHOD 2:

impeach %>% 
  group_by(for_impeachment) %>% 
  summarise(count = n())

# There were 26 people that were not in favor of impeachment, and 209 people who were in favor of impeachment.

```

2)  Similar to #1 above, using grouping to now break down the Democratic House members by TWO measures: those who are for or against impeachment (as you did above)....and then districts above/below national GDP.  
  
You'll want to ensure you do the grouping on both columns together, e.g. `group_by(column1, column2)`

```{r}

impeach %>% 
  group_by(for_impeachment, gdp_above_national) %>% 
  summarise(count = n())

# Of those NOT in favor of impeachment, 19 were below the GDP and 7 were above. Of those IN favor
# of impeachment, 126 were above the GDP and 83 were below the GDP.

```

3)  Now do the same as #2, but this time instead of GDP, group by whether the district is above or below the national average for the percentage of college graduates. The column that captures this information is `pct_bachelors_compared_to_national`.

```{r}

impeach %>% 
  group_by(for_impeachment, pct_bachelors_compared_to_national) %>% 
  summarise(count = n())

# Of those AGAINST impeachment, 7 were above the national average for the percentage of college graduates and 19
# were below. Whereas of those FOR impeachment, 128 were above the national average for percent of college graduates
# and 81 were below the national average.

```

4)  Let's look at the college graduation comparison in a slightly different way.  
  
Instead of counting how many districts are above/below the national average, this time summarize by the MEAN percentage of college grads (located in the column `pct_bachelors`) for districts that are Yes for impeachment vs. No.  
  
In other words, you want to end up with the calculated mean for what that percentage is for the Yes districts and the No districts.

```{r}

impeach %>% 
  group_by(for_impeachment) %>% 
  summarize(avg = mean(pct_bachelors))

# The mean for those against impeachment is 27.7%, while the mean for those in favor of impeachment is 33.7%.

```

5)  Do the same as #4, but this time show the MEAN *percentage of the vote that Donald Trump received* for districts that are Yes for impeachment vs. No.  
The relevant column for that is `trump_percent`.

```{r}

impeach %>% 
  group_by(for_impeachment) %>% 
  summarize(avg = mean(trump_percent))

# For those against impeachment, the mean percentage of the vote that Trump received is 43.8%. For those in favor
# of impeachment, the mean percentage is 32%.

```

6)  Filter out only the members who are a yes for impeachment. Then of those "Yes" member, how many won their 2018 election by less than 5 percentage points (`margin_flag_2018`) vs. more?

```{r}

impeach %>% 
  filter(for_impeachment == "YES") %>% 
  group_by(margin_flag_2018) %>% 
  summarize(count = n())

# For those in favor of impeachment, 17 won by less than 5 percentage points, and 192 won by more than
# 5 percentage points.

```

7)  Come up with another breakdown of your choosing for how you'd like to examine this dataset. Say what you'll look at, and then put the code below to find the answer.

```{r}

# Of House Democrats against impeachment, how many were from the South? (For this information, I will be 
# referencing states considered the South by U.S. federal government.)

impeach %>% 
  filter(for_impeachment == "NO") -> against_impeachment

against_impeachment %>% 
  group_by(state) %>% 
  summarize(count = n())

# Of the 26 against impeachment, 10 were from Southern states.

```

7)  You'll see a column in the table called date_announced. For members who came out as a Yes for impeachment, this is the date they announced their support for it.  
  
Use the mutate() function to create two new columns: one that extracts the year from date_announced, and a second that extracts the month.

```{r}

impeach %>% 
  mutate(year_anc = year(date_announced), month_anc = month(date_announced)) -> new_columns

```

8) Using the new columns you created in #7, use grouping to count up how many House Democrats during each month announced their support of impeachment.

```{r}

new_columns %>% 
  filter(for_impeachment == "YES") %>% 
  group_by(month_anc) %>% 
  summarize(count = n())

```

